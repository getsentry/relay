searchState.loadedDescShard("relay_redis", 0, "Abstraction over Redis caches.\nA connection client that can manage either a single Redis …\nA connection to either a single Redis instance or a Redis …\nA connection to a Redis cluster.\nContains a connection pool to a Redis cluster.\nAn error that occurs when configuring Redis.\nAn error that occurs during Redis configuration.\nAn error that occurs when creating a Redis connection pool.\nContains the error value\nContains the success value\nAn error that occurs when interacting with the Redis …\nAn error that occurs during communication with Redis.\nStatistics about the Redis client’s connection client …\nA collection of Redis clients used by Relay for different …\nAdditional configuration options for a redis client.\nAn error type that represents various failure modes when …\nA collection of static methods to load predefined Redis …\nTypical <code>Result</code> when dealing with Redis.\nA connection to a single Redis instance.\nContains a connection pool to a single Redis instance.\nReturns all <code>Script</code>s.\nThe client used for cardinality limits.\nCreates a new connection client for a Redis cluster.\nThe number of connections currently being managed by the …\nSets the maximum time in seconds to wait when establishing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAcquires a connection from the pool.\nThe number of idle connections.\nSets the idle timeout used by the pool, in seconds.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads the cardinality Redis script.\nLoads the global quota Redis script.\nLoads the rate limiting check Redis script.\nMaximum number of connections managed by the pool.\nThe maximum number of connections in the pool.\nThe client used for project configurations\nThe client used for rate limiting/quotas.\nSets the number of times after which the connection will …\nSets the maximum time in seconds to validate an existing …\nRuns the <code>predicate</code> on the pool blocking it.\nCreates a new connection client for a single Redis …\nReturns statistics about the current state of the …\nSets the maximum time, in seconds, that a caller is …\nThe number of futures that are currently waiting to get a …")