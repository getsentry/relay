searchState.loadedDescShard("relay_statsd", 0, "A high-level StatsD metric client built on cadence.\nA metric for capturing counters.\nA metric for capturing gauges.\nA metric for capturing histograms.\nThe <code>thread_local</code> aggregator which pre-aggregates metrics …\nThe globally configured Metrics, including a <code>cadence</code> …\nA metric for capturing sets.\nA metric for capturing timings.\nEmit a <code>count</code> metric, which is aggregated by summing up all …\nEmit a <code>gauge</code> metric, for which only the latest value is …\nEmit a <code>gauge</code> metric, for which only the latest value is …\nEmit a <code>histogram</code> metric, for which every value is …\nEmit a <code>set</code> metric, which is aggregated in a set.\nEmit a <code>timer</code> metric, for which every value is accumulated\nReturns the argument unchanged.\nReturns the argument unchanged.\nTell the metrics system to report to statsd.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEmits a metric.\nReturns the timer metric name that will be sent to statsd.\nReturns the counter metric name that will be sent to …\nReturns the histogram metric name that will be sent to …\nReturns the set metric name that will be sent to statsd.\nReturns the gauge metric name that will be sent to statsd.\nInvoke a callback with the current <code>MetricsWrapper</code> and …")