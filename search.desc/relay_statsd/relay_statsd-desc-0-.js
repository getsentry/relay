searchState.loadedDescShard("relay_statsd", 0, "A high-level StatsD metric client built on cadence.\nA metric for capturing counters.\nA metric for capturing gauges.\nA metric for capturing histograms.\nClient configuration object to store globally.\nClient configuration used for initialization of …\nA metric for capturing sets.\nA metric for capturing timings.\nIf metrics should be batched or send immediately upstream.\nIf high cardinality tags should be removed from metrics.\nDefault tags to apply to every metric.\nTags that are added to all metrics.\nDisable the client again.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHost of the metrics upstream.\nTell the metrics system to report to statsd.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEmits a metric.\nReturns the timer metric name that will be sent to statsd.\nReturns the counter metric name that will be sent to …\nReturns the histogram metric name that will be sent to …\nReturns the set metric name that will be sent to statsd.\nReturns the gauge metric name that will be sent to statsd.\nPrefix which is appended to all metric names.\nThe metrics prelude that is necessary to use the client.\nReceiver for external listeners.\nGlobal sample rate.\nSample rate for metrics, between 0.0 (= 0%) and 1.0 (= …\nSend a metric with the default tags defined on this …\nSet a new statsd client.\nThe raw statsd client.\nSet a test client for the period of the called function …\nInvoke a callback with the current statsd client.\nTrait for incrementing and decrementing counters.\nTrait for convenience methods for counters\nTrait for recording distribution values.\nTrait for recording gauge values.\nTrait for recording histogram values.\nTrait for recording meter values.\nTrait that encompasses all other traits for sending …\nTrait for recording set values.\nTrait for recording timings in milliseconds.\nIncrement or decrement the counter by the given amount\nIncrement or decrement the counter by the given amount and …\nDecrement the counter by 1\nDecrement the counter by 1 and return a <code>MetricBuilder</code> that …\nRecord a single distribution value with the given key\nRecord a single distribution value with the given key and …\nRecord a gauge value with the given key\nRecord a gauge value with the given key and return a …\nRecord a single histogram value with the given key\nRecord a single histogram value with the given key and …\nIncrement the counter by 1\nIncrement the counter by 1 and return a <code>MetricBuilder</code> that …\nRecord a meter value with the given key\nRecord a meter value with the given key and return a …\nRecord a single set value with the given key\nRecord a single set value with the given key and return a …\nRecord a timing in milliseconds with the given key\nRecord a timing in milliseconds with the given key and …")