searchState.loadedDescShard("relay_threading", 0, "Relay Threading\n<code>AsyncPool</code> is a thread-based executor that runs …\n<code>AsyncPoolBuilder</code> provides a flexible way to configure and …\n<code>CustomSpawn</code> is an alternative implementation of <code>ThreadSpawn</code>…\n<code>DefaultSpawn</code> is the default implementation of <code>ThreadSpawn</code> …\n<code>Thread</code> represents a dedicated worker thread within an …\n<code>ThreadSpawn</code> defines how threads are spawned in an <code>AsyncPool</code>…\nConstructs an <code>AsyncPool</code> based on the configured settings.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the unique index assigned to this <code>Thread</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the maximum number of concurrent tasks per thread in …\nReturns the maximum number of concurrent tasks permitted …\nReturns the human-readable name of this <code>Thread</code>, if one was …\nInitializes a new <code>AsyncPoolBuilder</code> with default settings.\nCreates a new <code>AsyncPool</code> based on the configuration …\nCreates a new instance of <code>CustomSpawn</code> with the specified …\nSets the number of worker threads for the <code>AsyncPool</code>.\nSpecifies a custom name for this pool.\nRuns the task multiplexer associated with this <code>Thread</code>.\nSpawns a new thread using the provided configuration.\nSchedules a future for execution within the <code>AsyncPool</code>.\nApplies the custom configuration closure when spawning a …\nAsynchronously enqueues a future for execution within the …\nConfigures a custom thread spawning procedure for the …\nSets a custom panic handler for tasks executed by the …\nSpecifies a custom naming convention for threads in the …\nSets a custom panic handler for threads in the <code>AsyncPool</code>.")