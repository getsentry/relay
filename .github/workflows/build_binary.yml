name: Binary Release Build

on:
  push:
    branches:
      - release/**

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build in Docker
        run: scripts/docker-build-linux.sh
        env:
          BUILD_ARCH: x86_64
          RELAY_FEATURES: ssl

      - name: Bundle Debug File
        run: zip -r relay-debug.zip target/x86_64-unknown-linux-gnu/release/relay.debug

      - uses: actions/setup-node@v1

      - name: Upload to Zeus
        env:
          ZEUS_HOOK_BASE: ${{ secrets.ZEUS_HOOK_BASE }}
        run: |
          yarn global add @zeus-ci/cli
          zeus job update -b ${{ github.run_id }} -j ${{ github.job }} -r ${{ github.sha }}
          zeus upload -b ${{ github.run_id }} -j ${{ github.job }} -t "application/octet-stream" -n relay-Linux-x86_64 target/x86_64-unknown-linux-gnu/release/relay
          zeus upload -b ${{ github.run_id }} -j ${{ github.job }} -t "application/zip" -n relay-Linux-x86_64-debug.zip relay-debug.zip
          zeus job update --status=passed -b ${{ github.run_id }} -j ${{ github.job }} -r ${{ github.sha }}

  macos:
    name: macOS
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run Cargo Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path=relay/Cargo.toml --release --features ssl

      - name: Bundle dSYM
        run: zip -r relay-dsym.zip target/release/relay.dSYM

      - uses: actions/setup-node@v1

      - name: Upload to Zeus
        env:
          ZEUS_HOOK_BASE: ${{ secrets.ZEUS_HOOK_BASE }}
        run: |
          yarn global add @zeus-ci/cli
          zeus job update -b ${{ github.run_id }} -j ${{ github.job }} -r ${{ github.sha }}
          zeus upload -b ${{ github.run_id }} -j ${{ github.job }} -t "application/octet-stream" -n relay-Darwin-x86_64 target/release/relay
          zeus upload -b ${{ github.run_id }} -j ${{ github.job }} -t "application/zip" -n relay-Darwin-x86_64-dsym.zip relay-dsym.zip
          zeus job update --status=passed -b ${{ github.run_id }} -j ${{ github.job }} -r ${{ github.sha }}

  windows:
    name: Windows
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Run Cargo Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path=relay/Cargo.toml --release --features ssl

      - name: Bundle PDB
        run: |
          Install-Module 7Zip4PowerShell -Force -Verbose
          7z a .\relay-pdb.zip .\target\release\relay.pdb

      - uses: actions/setup-node@v1

      - name: Upload to Zeus
        env:
          ZEUS_HOOK_BASE: ${{ secrets.ZEUS_HOOK_BASE }}
        run: |
          yarn global add @zeus-ci/cli
          zeus job update -b ${{ github.run_id }} -j ${{ github.job }} -r ${{ github.sha }}
          zeus upload -b ${{ github.run_id }} -j ${{ github.job }} -t "application/octet-stream" -n relay-Windows-x86_64.exe target/release/relay.exe
          zeus upload -b ${{ github.run_id }} -j ${{ github.job }} -t "application/zip" -n relay-Windows-x86_64-pdb.zip relay-pdb.zip
          zeus job update --status=passed -b ${{ github.run_id }} -j ${{ github.job }} -r ${{ github.sha }}
