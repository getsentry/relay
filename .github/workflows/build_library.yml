name: Library Release Build

on:
  push:
    branches:
      - release-library/**

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        build-arch:
          - manylinux2010_i686
          - manylinux2010_x86_64
          - manylinux2014_aarch64

    name: Python Linux ${{ matrix.build-arch }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - if: matrix.build-arch == 'manylinux2014_aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - name: Build in Docker
        run: scripts/docker-manylinux.sh
        env:
          BUILD_ARCH: ${{ matrix.build-arch }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: py/dist/*

  macos:
    strategy:
      fail-fast: false
      matrix:
        include:
          - macos-version: "macos-10.15"
            target: x86_64-apple-darwin
            py-platform: macosx-10_15_x86_64
          - macos-version: "macos-11.0"
            target: aarch64-apple-darwin
            py-platform: macosx-11_0_arm64

    name: Python macOS ${{ matrix.py-platform }}
    runs-on: ${{ matrix.macos-version }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      - uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Build Wheel
        run: |
          pip install wheel
          python setup.py bdist_wheel -p ${{ matrix.py-platform }}
        working-directory: py
        env:
          # consumed by cargo and setup.py to obtain the target dir
          CARGO_BUILD_TARGET: ${{ matrix.target }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: py/dist/*

  sdist:
    name: Python sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Build sdist
        run: python setup.py sdist --format=zip
        working-directory: py

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: py/dist/*
