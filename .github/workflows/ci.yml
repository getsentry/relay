name: CI

on:
  push:
    branches:
      - master

  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          profile: minimal
          components: clippy, rustfmt
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: lint-${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --all-features --tests -- -D clippy::all

  cargo_docs:
    name: Cargo Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          profile: minimal
          components: rust-docs
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: doc-${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}

      - run: make doc

      - name: Deploy
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/doc

  event_schema:
    name: Event Schema
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: schema-${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Generate Schema
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p generate-schema -- -o event.schema.json

      - name: Deploy
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.DATA_SCHEMAS_GITHUB_TOKEN }}
        run: |
          git config --global user.name "$(git log -1 --pretty=format:%an $GITHUB_SHA)"
          git config --global user.email "$(git log -1 --pretty=format:%ae $GITHUB_SHA)"
          git clone https://getsentry-bot:$GITHUB_TOKEN@github.com/getsentry/sentry-data-schemas
          cd sentry-data-schemas/
          mkdir -p ./relay/
          mv ../event.schema.json relay/event.schema.json
          git add relay/event.schema.json

          echo "attempting commit"
          if ! git commit -m "getsentry/relay@$GITHUB_SHA" ; then
            echo "Stopping, no changes"
            exit 0
          fi

          for i in 1 2 3 4 5; do
            echo "git push; Attempt $i"
            if git push; then
              exit 0
            fi

            git pull --rebase
          done

          echo "Failed to push"
          exit 1

  metrics_docs:
    name: Metrics Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        id: toolchain
        with:
          toolchain: stable
          profile: minimal
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: metrics-${{ runner.os }}-${{ steps.toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Document Metrics
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p document-metrics -- -o relay_metrics.json

      - name: Deploy
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.DATA_SCHEMAS_GITHUB_TOKEN }}
        run: |
          git config --global user.name "$(git log -1 --pretty=format:%an $GITHUB_SHA)"
          git config --global user.email "$(git log -1 --pretty=format:%ae $GITHUB_SHA)"
          git clone https://getsentry-bot:$GITHUB_TOKEN@github.com/getsentry/sentry-docs
          cd sentry-docs/
          mv ../relay_metrics.json src/data/relay_metrics.json
          git add src/data/relay_metrics.json

          echo "attempting commit"
          if ! git commit -m "getsentry/relay@$GITHUB_SHA" ; then
            echo "Stopping, no changes"
            exit 0
          fi

          for i in 1 2 3 4 5; do
            echo "git push; Attempt $i"
            if git push; then
              exit 0
            fi

            git pull --rebase
          done

          echo "Failed to push"
          exit 1
