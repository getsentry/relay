Created: 2019-01-18T15:16:13.567448+00:00
Creator: insta@0.2.2
Source: general/tests/test_fixtures.rs

---
event_id: c99bf5ef2eb447d59183ced79601b547
transaction: main at Object.<anonymous>
logentry:
  formatted: "Error: captureException call"
modules:
  accepts: 1.3.5
  array-flatten: 1.1.1
  body-parser: 1.18.2
  bytes: 3.0.0
  charenc: 0.0.2
  content-disposition: 0.5.2
  content-type: 1.0.4
  cookie: 0.3.1
  cookie-signature: 1.0.6
  crypt: 0.0.2
  debug: 2.6.9
  depd: 1.1.2
  destroy: 1.0.4
  ee-first: 1.1.1
  encodeurl: 1.0.2
  escape-html: 1.0.3
  etag: 1.8.1
  express: 4.16.3
  finalhandler: 1.1.1
  forwarded: 0.1.2
  fresh: 0.5.2
  http-errors: 1.6.3
  iconv-lite: 0.4.19
  inherits: 2.0.3
  ipaddr.js: 1.6.0
  is-buffer: 1.1.6
  md5: 2.2.1
  media-typer: 0.3.0
  merge-descriptors: 1.0.1
  methods: 1.1.2
  mime: 1.4.1
  mime-db: 1.35.0
  mime-types: 2.1.19
  ms: 2.0.0
  negotiator: 0.6.1
  on-finished: 2.3.0
  parseurl: 1.3.2
  path-to-regexp: 0.1.7
  proxy-addr: 2.0.3
  qs: 6.5.1
  range-parser: 1.2.0
  raven: 2.6.3
  raw-body: 2.3.2
  safe-buffer: 5.1.1
  send: 0.16.2
  serve-static: 1.13.2
  setprototypeof: 1.1.0
  stack-trace: 0.0.10
  statuses: 1.4.0
  timed-out: 4.0.1
  type-is: 1.6.16
  unpipe: 1.0.0
  utils-merge: 1.0.1
  uuid: 3.0.0
  vary: 1.1.2
platform: node
timestamp: 1532443929.0
server_name: Kamils-MacBook-Pro.local
release: randomRelease
environment: development
exception:
  values:
    - type: Error
      value: captureException call
      stacktrace:
        frames:
          - function: null.<anonymous>
            module: bootstrap_node
            filename: bootstrap_node.js
            lineno: 612
            colno: 3
            in_app: false
          - function: startup
            module: bootstrap_node
            filename: bootstrap_node.js
            lineno: 191
            colno: 16
            in_app: false
          - function: Module.runMain
            module: module
            filename: module.js
            lineno: 693
            colno: 10
            in_app: false
          - function: Module._load
            module: module
            filename: module.js
            lineno: 497
            colno: 3
            in_app: false
          - function: tryModuleLoad
            module: module
            filename: module.js
            lineno: 505
            colno: 12
            in_app: false
          - function: Module.load
            module: module
            filename: module.js
            lineno: 565
            colno: 32
            in_app: false
          - function: Module._extensions..js
            module: module
            filename: module.js
            lineno: 663
            colno: 10
            in_app: false
          - function: Module._compile
            module: module
            filename: module.js
            lineno: 652
            colno: 30
            in_app: false
          - function: Object.<anonymous>
            module: main
            filename: /Users/kamilogorek/Projects/sentry/tmp/main.js
            lineno: 21
            colno: 7
            pre_context:
              - "  },"
              - "  release: \"randomRelease\","
              - "  environment: \"development\","
              - "  tags: { git_commit: \"c0deb10c4\" },"
              - "  extra: { planet: { name: \"Earth\" } }"
              - "}).install();"
              - ""
            context_line: "Raven.captureException(\"captureException call\");"
            post_context:
              - //
              - "// new Promise(function(resolve, reject) {"
              - "//   reject(new Error(\"promise exception\"));"
              - "// });"
              - //
              - "// throw new Error(\"regular exception\");"
              - ""
            in_app: true
          - function: Raven.captureException
            module: "raven.lib:client"
            filename: /Users/kamilogorek/Projects/sentry/tmp/node_modules/raven/lib/client.js
            lineno: 407
            colno: 15
            pre_context:
              - "        kwargs.extra.__serialized__ = utils.serializeException(err);"
              - ""
              - "        err = new Error(message);"
              - "      } else {"
              - "        // This handles when someone does:"
              - "        //   throw \"something awesome\";"
              - "        // We synthesize an Error here so we can extract a (rough) stack trace."
            context_line: "        err = new Error(err);"
            post_context:
              - "      }"
              - "    }"
              - ""
              - "    var self = this;"
              - "    var eventId = this.generateEventId();"
              - "    parsers.parseError(err, kwargs, function(kw) {"
              - "      self.process(eventId, kw, cb);"
            in_app: false
tags:
  - - git_commit
    - c0deb10c4
extra:
  node: v8.11.2
  planet:
    name: Earth
project: ~
_meta:
  project:
    "":
      err:
        - - invalid_data
          - reason: expected an unsigned integer
      val: "297378"
