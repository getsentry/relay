{
  "release": "relay@0.4.46",
  "dist": null,
  "platform": "native",
  "message": "medium event",
  "datetime": "2019-10-04T01:23:08.000000Z",
  "time_spent": null,
  "tags": [
    [
      "environment",
      "release"
    ],
    [
      "level",
      "error"
    ],
    [
      "logger",
      "rdkafka::client"
    ],
    [
      "os",
      "Linux 4.14.137+"
    ],
    [
      "os.name",
      "Linux"
    ],
    [
      "rust",
      "rustc 1.38.0"
    ],
    [
      "rust.name",
      "rustc"
    ],
    [
      "release",
      "relay@0.4.46"
    ],
    [
      "server_name",
      "relay-77bcdc59f-7m8sb"
    ]
  ],
  "breadcrumbs": {
    "values": [
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141705.886,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141705.886,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141705.891,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141705.896,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141705.901,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.694,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.697,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.697,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.698,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.7,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.701,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.702,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.707,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.714,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141761.72,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.701,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.703,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.705,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.706,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.707,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.708,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.71,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.715,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.722,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.727,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141787.735,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.459,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.46,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.462,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.462,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.463,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.464,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.465,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.47,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.475,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570141901.479,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.928,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.93,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.932,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.933,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.934,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.935,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.936,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.937,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.939,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.94,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142087.942,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.145,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.148,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.15,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.155,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.156,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.157,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.158,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.163,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.169,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142206.174,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.641,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.644,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.646,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.647,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.648,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.649,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.65,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.655,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.661,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.666,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142388.672,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.176,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.179,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.181,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.182,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.185,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.186,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.188,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.195,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.2,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142508.206,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.569,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.571,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.573,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.574,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.575,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.576,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.577,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.582,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.588,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.592,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142689.598,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142808.978,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142808.981,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142808.983,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142808.984,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142808.985,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142808.986,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142808.987,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142808.992,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142809,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "trust_dns_proto::xfer::dns_exchange",
        "timestamp": 1570142809.005,
        "message": "sending message via: UDP(10.8.0.10:53)",
        "type": "log",
        "level": "info"
      },
      {
        "category": "rdkafka::client",
        "timestamp": 1570142888.378,
        "message": "librdkafka: Global error: BrokerTransportFailure (Local: Broker transport failure): 192.168.208.178:9092/0: Disconnected (after 3466979ms in state UP)",
        "type": "log",
        "level": "error"
      }
    ]
  },
  "contexts": {
    "device": {
      "type": "device",
      "arch": "x86_64"
    },
    "os": {
      "kernel_version": "#1 SMP Thu Aug 8 02:47:02 PDT 2019",
      "version": "4.14.137+",
      "type": "os",
      "name": "Linux"
    },
    "rust": {
      "version": "1.38.0",
      "type": "runtime",
      "name": "rustc",
      "channel": "stable"
    }
  },
  "culprit": "sentry::backtrace_support::backtrace_to_stacktrace",
  "debug_meta": {
    "images": [
      {
        "code_file": "/bin/relay",
        "arch": "x86_64",
        "image_addr": "0x55e0855c6000",
        "image_size": 46197295312896,
        "type": "symbolic",
        "debug_id": "ae5b056e-c6bd-1982-6524-315a73a8b7b2"
      },
      {
        "code_file": "/lib/x86_64-linux-gnu/libresolv.so.2",
        "image_size": 2191360,
        "type": "symbolic",
        "image_addr": "0x7fe4aabcd000",
        "debug_id": "81fdd5ea-1277-3ce6-1212-d1ee7d7ee1b9"
      },
      {
        "code_file": "/lib/x86_64-linux-gnu/libnss_dns.so.2",
        "image_size": 2121728,
        "type": "symbolic",
        "image_addr": "0x7fe4aade4000",
        "debug_id": "6fa55ab6-ec4c-41c4-fce7-f85f0b4aa0f2"
      },
      {
        "code_file": "/lib/x86_64-linux-gnu/libnss_files.so.2",
        "image_size": 116862976,
        "type": "symbolic",
        "image_addr": "0x7fe4aafea000",
        "debug_id": "8c8cdb8a-e0dd-c3e4-c3ba-bb8874ae69dc"
      },
      {
        "code_file": "/lib/x86_64-linux-gnu/libm.so.6",
        "image_size": 3162112,
        "type": "symbolic",
        "image_addr": "0x7fe4b1f5d000",
        "debug_id": "4c71494e-7c55-47e0-2c79-8f39365ca10f"
      },
      {
        "code_file": "/lib/x86_64-linux-gnu/libgcc_s.so.1",
        "image_size": 2191360,
        "type": "symbolic",
        "image_addr": "0x7fe4b2261000",
        "debug_id": "d25fad51-cd94-816c-3bed-40717347a534"
      },
      {
        "code_file": "/lib/x86_64-linux-gnu/libpthread.so.0",
        "image_size": 2215936,
        "type": "symbolic",
        "image_addr": "0x7fe4b2478000",
        "debug_id": "4809d616-cc7b-cb4a-ac29-a4eaa2dda0d2"
      },
      {
        "code_file": "/lib/x86_64-linux-gnu/libdl.so.2",
        "image_size": 2113536,
        "type": "symbolic",
        "image_addr": "0x7fe4b2695000",
        "debug_id": "eeae2cdb-74c3-a982-8ab1-416d0a9afe29"
      },
      {
        "code_file": "/lib/x86_64-linux-gnu/libc.so.6",
        "image_size": 3796992,
        "type": "symbolic",
        "image_addr": "0x7fe4b2899000",
        "debug_id": "e6435177-ff80-d40c-cd51-cce1ce8ca216"
      },
      {
        "code_file": "/lib64/ld-linux-x86-64.so.2",
        "image_size": 114250231808,
        "type": "symbolic",
        "image_addr": "0x7fe4b2c38000",
        "debug_id": "c3f96d60-1055-823e-140d-513bc7a25a63"
      },
      {
        "code_file": "linux-vdso.so.1",
        "image_size": 0,
        "type": "symbolic",
        "image_addr": "0x7fff4c9bb000",
        "debug_id": "39b87271-e8b7-cc53-ec71-b4cf73115fa3"
      }
    ]
  },
  "environment": "release",
  "exception": {
    "values": [
      {
        "stacktrace": {
          "frames": [
            {
              "function": "<unknown>",
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "unknown_image"
              },
              "instruction_addr": "0x0",
              "in_app": false
            },
            {
              "function": "__clone",
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "missing"
              },
              "instruction_addr": "0x7fe4b2981d0f",
              "package": "/lib/x86_64-linux-gnu/libc.so.6"
            },
            {
              "function": "start_thread",
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "missing"
              },
              "instruction_addr": "0x7fe4b247f4a4",
              "package": "/lib/x86_64-linux-gnu/libpthread.so.0"
            },
            {
              "function": "std::sys::unix::thread::Thread::new::thread_start",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/sys/unix/thread.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std3sys4unix6thread6Thread3new12thread_start17h382c6ae14181d163E",
              "filename": "src/libstd/sys/unix/thread.rs",
              "lineno": 79,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e08676c22a"
            },
            {
              "function": "std::sys_common::thread::start_thread",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/sys_common/thread.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std10sys_common6thread12start_thread17h562a7c4953cb1d31E",
              "filename": "src/libstd/sys_common/thread.rs",
              "lineno": 13,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e08676c2a4"
            },
            {
              "function": "alloc::boxed::Box<T>::call_once",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/liballoc/boxed.rs",
              "package": "/bin/relay",
              "symbol": "_ZN83_$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$9call_once17h13f473dbcdaa0fefE",
              "filename": "boxed.rs",
              "raw_function": "<alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once",
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e08676c2af",
              "lineno": 787
            },
            {
              "function": "alloc::boxed::Box<T>::call_once",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/liballoc/boxed.rs",
              "package": "/bin/relay",
              "symbol": "_ZN83_$LT$alloc..boxed..Box$LT$F$GT$$u20$as$u20$core..ops..function..FnOnce$LT$A$GT$$GT$9call_once17h2877b2aefb0fd627E",
              "filename": "boxed.rs",
              "raw_function": "<alloc::boxed::Box<F> as core::ops::function::FnOnce<A>>::call_once",
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e0867568ae",
              "lineno": 787
            },
            {
              "function": "core::ops::function::FnOnce::call_once{{vtable.shim}}",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libcore/ops/function.rs",
              "package": "/bin/relay",
              "symbol": "_ZN4core3ops8function6FnOnce40call_once$u7b$$u7b$vtable.shim$u7d$$u7d$17ha5d6b892fbcc73a1E",
              "filename": "function.rs",
              "lineno": 235,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085bfd720"
            },
            {
              "function": "std::thread::Builder::spawn_unchecked::{{closure}}",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/thread/mod.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std6thread7Builder15spawn_unchecked28_$u7b$$u7b$closure$u7d$$u7d$17he3d74607e799ca7cE",
              "filename": "mod.rs",
              "lineno": 469,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085bfd756"
            },
            {
              "function": "std::panic::catch_unwind",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/panic.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std5panic12catch_unwind17ha74efd75fd14f5faE",
              "filename": "panic.rs",
              "lineno": 394,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085bfd756"
            },
            {
              "function": "std::panicking::try",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/panicking.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std9panicking3try17h08ccbd65392e53f5E",
              "filename": "panicking.rs",
              "lineno": 275,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085bfd785"
            },
            {
              "function": "__rust_maybe_catch_panic",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libpanic_unwind/lib.rs",
              "package": "/bin/relay",
              "symbol": "__rust_maybe_catch_panic",
              "filename": "src/libpanic_unwind/lib.rs",
              "lineno": 80,
              "in_app": false,
              "data": {
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e08676cf89"
            },
            {
              "function": "std::sys_common::backtrace::__rust_begin_short_backtrace",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/sys_common/backtrace.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std10sys_common9backtrace28__rust_begin_short_backtrace17hf0c64eae0c710d1cE",
              "filename": "backtrace.rs",
              "lineno": 77,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085bf5827"
            },
            {
              "function": "rdkafka::producer::base_producer::ThreadedProducer<T>::start::{{closure}}",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/src/producer/base_producer.rs",
              "pre_context": [
                "            .name(\"producer polling thread\".to_string())",
                "            .spawn(move || {",
                "                trace!(\"Polling thread loop started\");",
                "                loop {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085bf5921",
              "symbol": "_ZN7rdkafka8producer13base_producer25ThreadedProducer$LT$C$GT$5start28_$u7b$$u7b$closure$u7d$$u7d$17had49b95808be4a01E",
              "post_context": [
                "                    if n == 0 {",
                "                        if should_stop.load(Ordering::Relaxed) {",
                "                            // We received nothing and the thread should",
                "                            // stop, so break the loop.",
                "                            break;"
              ],
              "filename": "base_producer.rs",
              "raw_function": "rdkafka::producer::base_producer::ThreadedProducer<C>::start::{{closure}}",
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "                    let n = producer_clone.poll(Duration::from_millis(100));",
              "lineno": 410
            },
            {
              "function": "rdkafka::producer::base_producer::BaseProducer<T>::poll",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/src/producer/base_producer.rs",
              "pre_context": [
                "",
                "    /// Polls the producer. Regular calls to `poll` are required to process the events",
                "    /// and execute the message delivery callbacks. Returns the number of events served.",
                "    pub fn poll<T: Into<Option<Duration>>>(&self, timeout: T) -> i32 {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085bf592f",
              "symbol": "_ZN7rdkafka8producer13base_producer21BaseProducer$LT$C$GT$4poll17h211d63376c4fbfafE",
              "post_context": [
                "    }",
                "",
                "    /// Returns a pointer to the native Kafka client.",
                "    fn native_ptr(&self) -> *mut RDKafka {",
                "        self.client_arc.native_ptr()"
              ],
              "filename": "base_producer.rs",
              "raw_function": "rdkafka::producer::base_producer::BaseProducer<C>::poll",
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "        unsafe { rdsys::rd_kafka_poll(self.native_ptr(), timeout_to_ms(timeout)) }",
              "lineno": 286
            },
            {
              "function": "rd_kafka_poll",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/rdkafka-sys/librdkafka/src/rdkafka.c",
              "pre_context": [
                "}",
                "",
                "int rd_kafka_poll (rd_kafka_t *rk, int timeout_ms) {",
                "        rd_kafka_app_polled(rk);"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085c1d565",
              "symbol": "rd_kafka_poll",
              "post_context": [
                "                                RD_KAFKA_Q_CB_CALLBACK, rd_kafka_poll_cb, NULL);",
                "}",
                "",
                "",
                "rd_kafka_event_t *rd_kafka_queue_poll (rd_kafka_queue_t *rkqu, int timeout_ms) {"
              ],
              "filename": "rdkafka.c",
              "lineno": 3405,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "        return rd_kafka_q_serve(rk->rk_rep, timeout_ms, 0,"
            },
            {
              "function": "rd_kafka_q_serve",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/rdkafka-sys/librdkafka/src/rdkafka_queue.c",
              "pre_context": [
                "\t/* Call callback for each op */",
                "        while ((rko = TAILQ_FIRST(&localq.rkq_q))) {",
                "                rd_kafka_op_res_t res;",
                ""
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085c517aa",
              "symbol": "rd_kafka_q_serve",
              "post_context": [
                "                res = rd_kafka_op_handle(rk, &localq, rko, cb_type,",
                "                                         opaque, callback);",
                "                /* op must have been handled */",
                "                rd_kafka_assert(NULL, res != RD_KAFKA_OP_RES_PASS);",
                "                cnt++;"
              ],
              "filename": "rdkafka_queue.c",
              "lineno": 484,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "                rd_kafka_q_deq0(&localq, rko);"
            },
            {
              "function": "rd_kafka_q_deq0",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/rdkafka-sys/librdkafka/src/rdkafka_queue.h",
              "pre_context": [
                "                   rkq->rkq_qsize >= (int64_t)rko->rko_len);",
                "",
                "        TAILQ_REMOVE(&rkq->rkq_q, rko, rko_link);",
                "        rkq->rkq_qlen--;"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085c517ef",
              "symbol": "rd_kafka_q_deq0",
              "post_context": [
                "}",
                "",
                "/**",
                " * Concat all elements of 'srcq' onto tail of 'rkq'.",
                " * 'rkq' will be be locked (if 'do_lock'==1), but 'srcq' will not."
              ],
              "filename": "rdkafka_queue.h",
              "lineno": 477,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "        rkq->rkq_qsize -= rko->rko_len;"
            },
            {
              "function": "rd_kafka_poll_cb",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/rdkafka-sys/librdkafka/src/rdkafka.c",
              "pre_context": [
                "\t\t/* FALLTHRU */",
                "",
                "\tcase RD_KAFKA_OP_ERR:",
                "\t\tif (rk->rk_conf.error_cb)"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085c22c90",
              "symbol": "rd_kafka_poll_cb",
              "post_context": [
                "\t\t\t\t\t     rko->rko_u.err.errstr,",
                "                                             rk->rk_conf.opaque);",
                "                else {",
                "                        /* If error string already contains",
                "                         * the err2str then skip including err2str in"
              ],
              "filename": "rdkafka.c",
              "lineno": 3276,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "\t\t\trk->rk_conf.error_cb(rk, rko->rko_err,"
            },
            {
              "function": "rdkafka::client::native_error_cb",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/src/client.rs",
              "pre_context": [
                "",
                "pub(crate) unsafe extern \"C\" fn native_error_cb<C: ClientContext>(",
                "        _client: *mut RDKafka, err: i32, reason: *const i8,",
                "        opaque: *mut c_void) {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085bf9727",
              "symbol": "_ZN7rdkafka6client15native_error_cb17ha810c3c24bb4991dE",
              "post_context": [
                "        .expect(\"global error not an rd_kafka_resp_err_t\");",
                "    let error = KafkaError::Global(err.into());",
                "    let reason = CStr::from_ptr(reason).to_string_lossy();",
                "",
                "    let context = Box::from_raw(opaque as *mut C);"
              ],
              "filename": "client.rs",
              "lineno": 307,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "    let err = rdsys::primitive_to_rd_kafka_resp_err_t(err)"
            },
            {
              "function": "core::option::Option<T>::expect",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/src/client.rs",
              "pre_context": [
                "        _client: *mut RDKafka, err: i32, reason: *const i8,",
                "        opaque: *mut c_void) {",
                "    let err = rdsys::primitive_to_rd_kafka_resp_err_t(err)",
                "        .expect(\"global error not an rd_kafka_resp_err_t\");"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085bf9730",
              "symbol": "_ZN4core6option15Option$LT$T$GT$6expect17h4fe3ced09ad8906cE",
              "post_context": [
                "    let reason = CStr::from_ptr(reason).to_string_lossy();",
                "",
                "    let context = Box::from_raw(opaque as *mut C);",
                "    (*context).error(error, reason.trim());",
                "    mem::forget(context);   // Do not free the context"
              ],
              "filename": "client.rs",
              "lineno": 309,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "    let error = KafkaError::Global(err.into());"
            },
            {
              "function": "core::convert::Into<T>::into",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/src/client.rs",
              "pre_context": [
                "    let error = KafkaError::Global(err.into());",
                "    let reason = CStr::from_ptr(reason).to_string_lossy();",
                "",
                "    let context = Box::from_raw(opaque as *mut C);"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085bf97bf",
              "symbol": "_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hfadfa31784844ea9E",
              "post_context": [
                "    mem::forget(context);   // Do not free the context",
                "}",
                "",
                "#[cfg(test)]",
                "mod tests {"
              ],
              "filename": "client.rs",
              "raw_function": "<T as core::convert::Into<U>>::into",
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "    (*context).error(error, reason.trim());",
              "lineno": 313
            },
            {
              "function": "rdkafka::producer::future_producer::FutureProducerContext<T>::error",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/src/producer/future_producer.rs",
              "pre_context": [
                "        self.wrapped_context.stats(statistics);",
                "    }",
                "",
                "    fn error(&self, error: KafkaError, reason: &str) {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085bf980f",
              "symbol": "_ZN117_$LT$rdkafka..producer..future_producer..FutureProducerContext$LT$C$GT$$u20$as$u20$rdkafka..client..ClientContext$GT$5error17hfae0858484938d57E",
              "post_context": [
                "    }",
                "}",
                "",
                "impl<C: ClientContext + 'static> ProducerContext for FutureProducerContext<C> {",
                "    type DeliveryOpaque = Box<Complete<OwnedDeliveryResult>>;"
              ],
              "filename": "future_producer.rs",
              "raw_function": "<rdkafka::producer::future_producer::FutureProducerContext<C> as rdkafka::client::ClientContext>::error",
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "        self.wrapped_context.error(error, reason);",
              "lineno": 133
            },
            {
              "function": "rdkafka::client::ClientContext::error",
              "abs_path": "/usr/local/cargo/git/checkouts/rust-rdkafka-34d944143d921bb0/0efbcf3/src/client.rs",
              "pre_context": [
                "    }",
                "",
                "    /// Receives global errors from the librdkafka client.",
                "    fn error(&self, error: KafkaError, reason: &str) {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085bf8e91",
              "symbol": "_ZN7rdkafka6client13ClientContext5error17hdf50b41b69da8585E",
              "post_context": [
                "    }",
                "",
                "    // NOTE: when adding a new method, remember to add it to the FutureProducerContext as well.",
                "    // https://github.com/rust-lang/rfcs/pull/1406 will maybe help in the future.",
                "}"
              ],
              "filename": "client.rs",
              "lineno": 55,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "        error!(\"librdkafka: {}: {}\", error, reason);"
            },
            {
              "function": "log::__log",
              "abs_path": "/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/log-0.3.9/src/lib.rs",
              "pre_context": [
                "            };",
                "            logger.log(&record);",
                "        }",
                "        None => {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085cc09a4",
              "symbol": "_ZN3log5__log17h9d2c15ae4a46a97dE",
              "post_context": [
                "                log::logger(),",
                "                &log::Record::builder()",
                "                    .level(level.to_new())",
                "                    .target(target)",
                "                    .file(Some(loc.__file))"
              ],
              "filename": "lib.rs",
              "lineno": 971,
              "in_app": false,
              "data": {
                "symbolicator_status": "symbolicated"
              },
              "context_line": "            log::Log::log("
            },
            {
              "function": "sentry::integrations::log::Logger::log",
              "abs_path": "/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/sentry-0.17.0/src/integrations/log.rs",
              "pre_context": [
                "    }",
                "",
                "    fn log(&self, record: &log::Record<'_>) {",
                "        if self.options.create_issue_for_record(record) {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085eafb55",
              "symbol": "_ZN62_$LT$sentry..integrations..log..Logger$u20$as$u20$log..Log$GT$3log17h74fdddc6eb0d8678E",
              "post_context": [
                "                hub.capture_event(event_from_record(record, self.options.attach_stacktraces))",
                "            });",
                "        }",
                "        if self.options.emit_breadcrumbs && record.level() <= self.options.filter {",
                "            add_breadcrumb(|| breadcrumb_from_record(record))"
              ],
              "filename": "log.rs",
              "raw_function": "<sentry::integrations::log::Logger as log::Log>::log",
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "            Hub::with_active(|hub| {",
              "lineno": 184
            },
            {
              "function": "sentry::hub::Hub::with_active",
              "abs_path": "/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/sentry-0.17.0/src/hub.rs",
              "pre_context": [
                "        F: FnOnce(&Arc<Hub>) -> R,",
                "        R: Default,",
                "    {",
                "        with_client_impl! {{"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085ed600a",
              "symbol": "_ZN6sentry3hub3Hub11with_active17h417fe35d1f05cb26E",
              "post_context": [
                "                if hub.is_active_and_usage_safe() {",
                "                    f(hub)",
                "                } else {",
                "                    Default::default()",
                "                }"
              ],
              "filename": "hub.rs",
              "lineno": 208,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "            Hub::with(|hub| {"
            },
            {
              "function": "sentry::hub::Hub::with",
              "abs_path": "/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/sentry-0.17.0/src/hub.rs",
              "pre_context": [
                "    pub fn with<F, R>(f: F) -> R",
                "    where",
                "        F: FnOnce(&Arc<Hub>) -> R,",
                "    {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085ed600a",
              "symbol": "_ZN6sentry3hub3Hub4with17haf8fa2f14f80e912E",
              "post_context": [
                "            f(&PROCESS_HUB.0)",
                "        } else {",
                "            // not on safety: this is safe because even though we change the Arc",
                "            // by temorary binding we guarantee that the original Arc stays alive.",
                "            // For more information see: run"
              ],
              "filename": "hub.rs",
              "lineno": 184,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "        if USE_PROCESS_HUB.with(Cell::get) {"
            },
            {
              "function": "std::thread::local::LocalKey<T>::with",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/thread/local.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std6thread5local17LocalKey$LT$T$GT$4with17h68b593154ee42ac6E",
              "filename": "local.rs",
              "lineno": 239,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085ed600a"
            },
            {
              "function": "std::thread::local::LocalKey<T>::try_with",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/thread/local.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std6thread5local17LocalKey$LT$T$GT$8try_with17h5187c062a340e6caE",
              "filename": "local.rs",
              "lineno": 259,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085ed600a"
            },
            {
              "function": "sentry::hub::USE_PROCESS_HUB::__getit",
              "abs_path": "<::std::thread::local::__thread_local_inner macros>",
              "package": "/bin/relay",
              "symbol": "_ZN6sentry3hub15USE_PROCESS_HUB7__getit17h65f6123090b5d98fE",
              "filename": "<::std::thread::local::__thread_local_inner macros>",
              "lineno": 29,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085ed600a"
            },
            {
              "function": "std::thread::local::fast::Key<T>::get",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/thread/local.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std6thread5local4fast12Key$LT$T$GT$3get17h652912daba8d1e1aE",
              "filename": "local.rs",
              "lineno": 416,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085ed6030"
            },
            {
              "function": "std::thread::local::fast::Key<T>::try_initialize",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/thread/local.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std6thread5local4fast12Key$LT$T$GT$14try_initialize17he00de334c203564fE",
              "filename": "local.rs",
              "lineno": 431,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085ed6030"
            },
            {
              "function": "std::thread::local::lazy::LazyKeyInner<T>::initialize",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libstd/thread/local.rs",
              "package": "/bin/relay",
              "symbol": "_ZN3std6thread5local4lazy21LazyKeyInner$LT$T$GT$10initialize17hcb7c8448ec10eeb3E",
              "filename": "local.rs",
              "lineno": 290,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085ed6030"
            },
            {
              "function": "core::ops::function::FnOnce::call_once",
              "abs_path": "/rustc/625451e376bb2e5283fc4741caa0a3e8a2ca4d54/src/libcore/ops/function.rs",
              "package": "/bin/relay",
              "symbol": "_ZN4core3ops8function6FnOnce9call_once17h1999e6cb52709f11E",
              "filename": "function.rs",
              "lineno": 235,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085ed6030"
            },
            {
              "function": "sentry::hub::USE_PROCESS_HUB::__init",
              "abs_path": "<::std::thread::local::__thread_local_inner macros>",
              "package": "/bin/relay",
              "symbol": "_ZN6sentry3hub15USE_PROCESS_HUB6__init17h5c83ee45546de0e5E",
              "filename": "<::std::thread::local::__thread_local_inner macros>",
              "lineno": 5,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "instruction_addr": "0x55e085ed6134"
            },
            {
              "function": "sentry::integrations::log::event_from_record",
              "abs_path": "/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/sentry-0.17.0/src/integrations/log.rs",
              "pre_context": [
                "        exception: vec![Exception {",
                "            ty: record.target().into(),",
                "            value: Some(format!(\"{}\", record.args())),",
                "            stacktrace: if with_stacktrace {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085eaf232",
              "symbol": "_ZN6sentry12integrations3log17event_from_record17h704fcb5490f1cd34E",
              "post_context": [
                "            } else {",
                "                None",
                "            },",
                "            ..Default::default()",
                "        }]"
              ],
              "filename": "log.rs",
              "lineno": 161,
              "in_app": false,
              "data": {
                "symbolicator_status": "symbolicated"
              },
              "context_line": "                current_stacktrace()"
            },
            {
              "function": "sentry::backtrace_support::current_stacktrace",
              "abs_path": "/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/sentry-0.17.0/src/backtrace_support.rs",
              "pre_context": [
                "",
                "/// Returns the current backtrace as sentry stacktrace.",
                "#[allow(unused)]",
                "pub fn current_stacktrace() -> Option<Stacktrace> {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085ee926d",
              "symbol": "_ZN6sentry17backtrace_support18current_stacktrace17h19bb8eda9d84d3dcE",
              "post_context": [
                "}",
                "",
                "/// A helper function to trim a stacktrace.",
                "#[allow(unused)]",
                "pub fn trim_stacktrace<F>(stacktrace: &mut Stacktrace, f: F)"
              ],
              "filename": "backtrace_support.rs",
              "lineno": 178,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "    backtrace_to_stacktrace(&Backtrace::new())"
            },
            {
              "function": "sentry::backtrace_support::backtrace_to_stacktrace",
              "abs_path": "/usr/local/cargo/registry/src/github.com-1ecc6299db9ec823/sentry-0.17.0/src/backtrace_support.rs",
              "pre_context": [
                "}",
                "",
                "#[allow(unused)]",
                "pub fn backtrace_to_stacktrace(bt: &Backtrace) -> Option<Stacktrace> {"
              ],
              "package": "/bin/relay",
              "instruction_addr": "0x55e085ee926d",
              "symbol": "_ZN6sentry17backtrace_support23backtrace_to_stacktrace17hdf80dd54330bf51aE",
              "post_context": [
                "        .frames()",
                "        .iter()",
                "        .flat_map(|frame| {",
                "            // For each frame, there may be multiple symbols if a function was inlined, so",
                "            // add an entry for each symbol."
              ],
              "filename": "backtrace_support.rs",
              "lineno": 128,
              "in_app": false,
              "data": {
                "orig_in_app": 1,
                "symbolicator_status": "symbolicated"
              },
              "context_line": "    let frames = bt"
            }
          ]
        },
        "type": "rdkafka::client",
        "raw_stacktrace": {
          "frames": [
            {
              "function": "<unknown>",
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x0",
              "in_app": false
            },
            {
              "function": "__clone",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x7fe4b2981d0f",
              "package": "/lib/x86_64-linux-gnu/libc.so.6"
            },
            {
              "function": "start_thread",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x7fe4b247f4a4",
              "package": "/lib/x86_64-linux-gnu/libpthread.so.0"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e08676c2b0",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e0867568af",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085bfd786",
              "package": "/bin/relay"
            },
            {
              "function": "__rust_maybe_catch_panic",
              "in_app": false,
              "instruction_addr": "0x55e08676cf8a",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085bf5930",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085c1d566",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085c517f0",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085c22c91",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085bf9810",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085bf8e92",
              "package": "/bin/relay"
            },
            {
              "function": "log::__log",
              "in_app": false,
              "instruction_addr": "0x55e085cc09a5",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085eafb56",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085ed6135",
              "package": "/bin/relay"
            },
            {
              "function": "sentry::integrations::log::event_from_record",
              "in_app": false,
              "instruction_addr": "0x55e085eaf233",
              "package": "/bin/relay"
            },
            {
              "function": "<unknown>",
              "in_app": false,
              "data": {
                "orig_in_app": 1
              },
              "instruction_addr": "0x55e085ee926d",
              "package": "/bin/relay"
            }
          ]
        },
        "value": "librdkafka: Global error: BrokerTransportFailure (Local: Broker transport failure): 192.168.208.180:9092/1: Disconnected (after 1137010ms in state UP)"
      }
    ]
  },

  "key_id": "643163",
  "level": "error",
  "location": "backtrace_support.rs",
  "logger": "rdkafka::client",
  "metadata": {
    "function": "sentry::backtrace_support::backtrace_to_stacktrace",
    "type": "rdkafka::client",
    "value": "librdkafka: Global error: BrokerTransportFailure (Local: Broker transport failure): 192.168.208.180:9092/1: Disconnected (after 1137010ms in state UP)",
    "filename": "backtrace_support.rs"
  },
  "received": 1570152188.447,
  "sdk": {
    "version": "0.17.0",
    "name": "sentry.rust",
    "packages": [
      {
        "version": "0.17.0",
        "name": "cargo:sentry"
      }
    ],
    "integrations": [
      "failure",
      "panic",
      "log"
    ]
  },
  "timestamp": 1570152188.374,
  "title": "rdkafka::client: librdkafka: Global error: BrokerTransportFailure (Local: Broker transport failure): 192.168.208.1...",
  "type": "error",
  "version": "7"
}
