---
source: relay-server/src/metrics_extraction/transactions/mod.rs
expression: event.value().unwrap().spans
---
[
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "<OrganizationContext>",
        op: "react.mount",
        span_id: SpanId(
            "bd429c44b67a3eb4",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: ~,
        tags: ~,
        origin: ~,
        data: {
            "environment": String(
                "fake_environment",
            ),
            "span.op": String(
                "react.mount",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "POST http://sth.subdomain.domain.tld:targetport/api/hi",
        op: "http.client",
        span_id: SpanId(
            "bd2eb23da2beb459",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "environment": String(
                "fake_environment",
            ),
            "http.method": String(
                "POST",
            ),
            "span.action": String(
                "POST",
            ),
            "span.domain": String(
                "*.domain.tld:targetport",
            ),
            "span.module": String(
                "http",
            ),
            "span.op": String(
                "http.client",
            ),
            "span.status": String(
                "ok",
            ),
            "span.status_code": String(
                "200",
            ),
            "status_code": String(
                "200",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "POST http://targetdomain.tld:targetport/api/hi",
        op: "http.client",
        span_id: SpanId(
            "bd2eb23da2beb459",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "environment": String(
                "fake_environment",
            ),
            "http.method": String(
                "POST",
            ),
            "span.action": String(
                "POST",
            ),
            "span.domain": String(
                "targetdomain.tld:targetport",
            ),
            "span.module": String(
                "http",
            ),
            "span.op": String(
                "http.client",
            ),
            "span.status": String(
                "ok",
            ),
            "span.status_code": String(
                "200",
            ),
            "status_code": String(
                "200",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "POST http://targetdomain:targetport/api/id/0987654321",
        op: "http.client",
        span_id: SpanId(
            "bd2eb23da2beb459",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "description.scrubbed": String(
                "POST http://targetdomain:targetport/api/id/*",
            ),
            "environment": String(
                "fake_environment",
            ),
            "http.method": String(
                "POST",
            ),
            "span.action": String(
                "POST",
            ),
            "span.description": String(
                "POST http://targetdomain:targetport/api/id/*",
            ),
            "span.domain": String(
                "targetdomain:targetport",
            ),
            "span.module": String(
                "http",
            ),
            "span.op": String(
                "http.client",
            ),
            "span.status": String(
                "ok",
            ),
            "span.status_code": String(
                "200",
            ),
            "status_code": String(
                "200",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "SELECT column FROM table WHERE id IN (1, 2, 3)",
        op: "db.sql.query",
        span_id: SpanId(
            "bb7af8b99e95af5f",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "db.operation": String(
                "SELECT",
            ),
            "db.system": String(
                "MyDatabase",
            ),
            "description.scrubbed": String(
                "SELECT column FROM table WHERE id IN (%s)",
            ),
            "environment": String(
                "fake_environment",
            ),
            "span.action": String(
                "SELECT",
            ),
            "span.description": String(
                "SELECT column FROM table WHERE id IN (%s)",
            ),
            "span.domain": String(
                "table",
            ),
            "span.module": String(
                "db",
            ),
            "span.op": String(
                "db.sql.query",
            ),
            "span.status": String(
                "ok",
            ),
            "span.system": String(
                "MyDatabase",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "INSERT INTO table (col) VALUES (val)",
        op: "db.sql.query",
        span_id: SpanId(
            "bb7af8b99e95af5f",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "db.operation": String(
                "INSERT",
            ),
            "db.system": String(
                "MyDatabase",
            ),
            "environment": String(
                "fake_environment",
            ),
            "span.action": String(
                "INSERT",
            ),
            "span.domain": String(
                "table",
            ),
            "span.module": String(
                "db",
            ),
            "span.op": String(
                "db.sql.query",
            ),
            "span.status": String(
                "ok",
            ),
            "span.system": String(
                "MyDatabase",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "INSERT INTO from_date (col) VALUES (val)",
        op: "db.sql.query",
        span_id: SpanId(
            "bb7af8b99e95af5f",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "db.operation": String(
                "INSERT",
            ),
            "db.system": String(
                "MyDatabase",
            ),
            "environment": String(
                "fake_environment",
            ),
            "span.action": String(
                "INSERT",
            ),
            "span.domain": String(
                "from_date",
            ),
            "span.module": String(
                "db",
            ),
            "span.op": String(
                "db.sql.query",
            ),
            "span.status": String(
                "ok",
            ),
            "span.system": String(
                "MyDatabase",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "SELECT\n*\nFROM\ntable\nWHERE\nid\nIN\n(val)",
        op: "db.sql.query",
        span_id: SpanId(
            "bb7af8b99e95af5f",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "db.operation": String(
                "SELECT",
            ),
            "db.system": String(
                "MyDatabase",
            ),
            "environment": String(
                "fake_environment",
            ),
            "span.action": String(
                "SELECT",
            ),
            "span.domain": String(
                "table",
            ),
            "span.module": String(
                "db",
            ),
            "span.op": String(
                "db.sql.query",
            ),
            "span.status": String(
                "ok",
            ),
            "span.system": String(
                "MyDatabase",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "SAVEPOINT save_this_one",
        op: "db",
        span_id: SpanId(
            "bb7af8b99e95af5f",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "db.operation": String(
                "SELECT",
            ),
            "db.system": String(
                "MyDatabase",
            ),
            "description.scrubbed": String(
                "SAVEPOINT %s",
            ),
            "environment": String(
                "fake_environment",
            ),
            "span.action": String(
                "SELECT",
            ),
            "span.description": String(
                "SAVEPOINT %s",
            ),
            "span.module": String(
                "db",
            ),
            "span.op": String(
                "db",
            ),
            "span.status": String(
                "ok",
            ),
            "span.system": String(
                "MyDatabase",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "GET cache:user:{123}",
        op: "cache.get_item",
        span_id: SpanId(
            "bb7af8b99e95af5f",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "cache.hit": Bool(
                false,
            ),
            "description.scrubbed": String(
                "GET cache:user:*",
            ),
            "environment": String(
                "fake_environment",
            ),
            "span.description": String(
                "GET cache:user:*",
            ),
            "span.module": String(
                "cache",
            ),
            "span.op": String(
                "cache.get_item",
            ),
            "span.status": String(
                "ok",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
    Span {
        timestamp: Timestamp(
            2020-08-21T02:18:22Z,
        ),
        start_timestamp: Timestamp(
            2020-08-21T02:18:20Z,
        ),
        exclusive_time: 2000.0,
        description: "http://domain/static/myscript-v1.9.23.js",
        op: "resource.script",
        span_id: SpanId(
            "bb7af8b99e95af5f",
        ),
        parent_span_id: SpanId(
            "8f5a2b8768cafb4e",
        ),
        trace_id: TraceId(
            "ff62a8b040f340bda5d830223def1d81",
        ),
        status: Ok,
        tags: ~,
        origin: ~,
        data: {
            "description.scrubbed": String(
                "http://domain/static/myscript-*.js",
            ),
            "environment": String(
                "fake_environment",
            ),
            "span.description": String(
                "http://domain/static/myscript-*.js",
            ),
            "span.op": String(
                "resource.script",
            ),
            "span.status": String(
                "ok",
            ),
            "transaction": String(
                "mytransaction",
            ),
            "transaction.op": String(
                "myop",
            ),
        },
        other: {},
    },
]
