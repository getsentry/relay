[package]
name = "relay-server"
authors = ["Sentry <oss@sentry.io>"]
description = "Endpoints and services for Relay"
homepage = "https://getsentry.github.io/relay/"
repository = "https://github.com/getsentry/relay"
version = "24.8.0"
edition = "2021"
build = "build.rs"
license-file = "../LICENSE.md"
publish = false

[features]
default = []
dashboard = [
    "axum/ws",
    "dep:rust-embed",
    "dep:mime_guess",
    "relay-log/dashboard",
]
processing = [
    "dep:minidump",
    "dep:symbolic-common",
    "dep:symbolic-unreal",
    "dep:zstd",
    "relay-cardinality/redis",
    "relay-config/processing",
    "relay-kafka/producer",
    "relay-metrics/redis",
    "relay-quotas/redis",
    "relay-redis/impl",
    "relay-sampling/redis",
]

[lints]
workspace = true

[dependencies]
anyhow = { workspace = true }
serde_path_to_error = { workspace = true }
axum = { workspace = true, features = [
    "headers",
    "macros",
    "matched-path",
    "multipart",
    "tracing",
] }
axum-server = { workspace = true }
arc-swap = { workspace = true }
backoff = { workspace = true }
brotli = { workspace = true }
bytes = { workspace = true, features = ["serde"] }
chrono = { workspace = true, features = ["clock"] }
data-encoding = { workspace = true }
flate2 = { workspace = true }
fnv = { workspace = true }
futures = { workspace = true }
hashbrown = { workspace = true }
itertools = { workspace = true }
json-forensics = { workspace = true }
mime = { workspace = true }
mime_guess = { workspace = true, optional = true }
minidump = { workspace = true, optional = true }
multer = { workspace = true }
once_cell = { workspace = true }
pin-project-lite = { workspace = true }
priority-queue = { workspace = true }
rand = { workspace = true }
rayon = { workspace = true }
regex = { workspace = true }
relay-auth = { workspace = true }
relay-base-schema = { workspace = true }
relay-cardinality = { workspace = true }
relay-cogs = { workspace = true }
relay-common = { workspace = true }
relay-config = { workspace = true }
relay-dynamic-config = { workspace = true }
relay-event-normalization = { workspace = true }
relay-event-schema = { workspace = true }
relay-filter = { workspace = true }
relay-kafka = { workspace = true, optional = true }
relay-log = { workspace = true, features = ["sentry"] }
relay-metrics = { workspace = true }
relay-monitors = { workspace = true }
relay-pii = { workspace = true }
relay-profiling = { workspace = true }
relay-protocol = { workspace = true }
relay-quotas = { workspace = true }
relay-redis = { workspace = true }
relay-replays = { workspace = true }
relay-sampling = { workspace = true }
relay-spans = { workspace = true }
relay-statsd = { workspace = true }
relay-system = { workspace = true }
reqwest = { workspace = true, features = [
    "gzip",
    "stream",
    "trust-dns",
    "native-tls-vendored",
] }
rmp-serde = { workspace = true }
rust-embed = { workspace = true, optional = true }
serde = { workspace = true }
serde_bytes = { workspace = true }
serde_json = { workspace = true }
smallvec = { workspace = true, features = ["drain_filter"] }
sqlx = { workspace = true, features = [
    "macros",
    "migrate",
    "sqlite",
    "runtime-tokio",
], default-features = false }
symbolic-common = { workspace = true, optional = true, default-features = false }
symbolic-unreal = { workspace = true, optional = true, default-features = false, features = [
    "serde",
] }
sysinfo = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["rt", "rt-multi-thread"] }
tower = { workspace = true, default-features = false }
tower-http = { workspace = true, default-features = false, features = [
    "catch-panic",
    "compression-br",
    "compression-deflate",
    "compression-gzip",
    "cors",
    "decompression-br",
    "decompression-deflate",
    "decompression-gzip",
    "set-header",
    "trace",
] }
url = { workspace = true, features = ["serde"] }
uuid = { workspace = true, features = ["v5"] }
zstd = { workspace = true, optional = true }
axum-extra = { workspace = true, features = ["protobuf"] }
semver = { workspace = true }

[dev-dependencies]
criterion = { workspace = true }
tokio = { workspace = true, features = ['test-util'] }
insta = { workspace = true }
relay-event-schema = { workspace = true, features = ["jsonschema"] }
relay-protocol = { workspace = true, features = ["test"] }
relay-test = { workspace = true }
similar-asserts = { workspace = true }
tempfile = { workspace = true }

[[bench]]
name = "benches"
harness = false
